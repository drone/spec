{
    "definitions": {
        "Pipeline": {
            "title": "Pipeline",
            "description": "Pipeline defines the pipeline execution.",
            "type": "object",
            "properties": {
                "version": {
                    "description": "Version defines the schema version.",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "name": {
                    "description": "Pipeline provides the pipeline name.",
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "description": "Stages defines a list of pipeline stages.",
                    "items": {
                        "$ref": "#/definitions/Stage"
                    }
                },
                "inputs": {
                    "type": "object",
                    "description": "Inputs defines the pipeline input parameters.",
                    "additionalProperties": {
                        "$ref": "#/definitions/Input"
                    }
                },
                "repository": {
                    "type": "object",
                    "description": "Repository defines the pipeline repo parameters.",
                    "additionalProperties": {
                        "$ref": "#/definitions/Repository"
                    }
                },
                "registry": {
                    "$ref": "#/definitions/Registry",
                    "description": "Registry provides container registry configuration."
                }
            },
            "required": [
                "version",
                "stages"
            ],
            "examples": [
                {
                    "version": 1,
                    "stages": [
                        {
                            "name": "build",
                            "type": "ci",
                            "spec": {
                                "steps": [
                                    {
                                        "name": "compile",
                                        "type": "script",
                                        "spec": {
                                            "run": "go build\ngo test"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "x-file": "pipeline.yaml"
        },
        "Stage": {
            "title": "Stage",
            "type": "object",
            "properties": {
                "desc": {
                    "description": "The stage description.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique stage identifier.",
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "type": "string"
                },
                "name": {
                    "description": "The sage name.",
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/definitions/Strategy",
                    "description": "The stage execution strategy."
                },
                "type": {
                    "description": "The stage type.",
                    "enum": [
                        "cd",
                        "ci",
                        "custom",
                        "flag",
                        "infra",
                        "template"
                    ],
                    "type": "string"
                },
                "when": {
                    "description": "The stage conditional logic.",
                    "$ref": "#/definitions/When"
                },
                "on": {
                    "$ref": "#/definitions/On"
                }
            },
            "oneOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "ci"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageCI"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "cd"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageCD"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "custom"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageCustom"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "infra"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageInfra"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "flag"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageFlag"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "template"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StageTemplate"
                                }
                            }
                        }
                    ]
                }
            ],
            "anyOf": [
                {
                    "required": [
                        "name"
                    ]
                },
                {
                    "required": [
                        "id"
                    ]
                }
            ],
            "x-file": "stage.yaml"
        },
        "Strategy": {
            "title": "Strategy",
            "type": "object",
            "description": "Strategy defines an optional execution strategy.",
            "properties": {
                "type": {
                    "description": "Type defines the execution strategy type.",
                    "type": "string",
                    "enum": [
                        "for",
                        "matrix",
                        "while"
                    ]
                }
            },
            "oneOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "for"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/For"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "matrix"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/Matrix"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "while"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/While"
                                }
                            }
                        }
                    ]
                }
            ],
            "x-file": "strategy.yaml"
        },
        "For": {
            "title": "For",
            "description": "Defines a for loop execution strategy.",
            "type": "object",
            "properties": {
                "concurrency": {
                    "description": "Defines the for loop concurrency.",
                    "type": "number"
                },
                "iterations": {
                    "type": "number"
                }
            },
            "x-file": "strategy_for.yaml"
        },
        "Matrix": {
            "title": "Matrix",
            "type": "object",
            "description": "Defines a matrix execution strategy.",
            "properties": {
                "axis": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "concurrency": {
                    "description": "Defines the matrix concurrency.",
                    "type": "number"
                },
                "include": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "exclude": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "x-file": "strategy_matrix.yaml"
        },
        "While": {
            "title": "While",
            "description": "Defines a while loop execution strategy.",
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Defines the while condition."
                },
                "iterations": {
                    "type": "number",
                    "description": "Defines the maximum number of interations."
                }
            },
            "x-file": "strategy_while.yaml"
        },
        "When": {
            "title": "When",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#/definitions/WhenCond"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WhenCond"
                    }
                }
            ],
            "x-go-skip": true,
            "x-file": "when.yaml"
        },
        "WhenCond": {
            "title": "WhenCond",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/WhenExpr"
            },
            "x-go-skip": true,
            "x-file": "when_cond.yaml"
        },
        "WhenExpr": {
            "title": "WhenExpr",
            "type": "object",
            "properties": {
                "eq": {
                    "type": "string"
                },
                "in": {
                    "type": "array"
                },
                "not": {
                    "type": "object",
                    "properties": {
                        "eq": {
                            "type": "string"
                        },
                        "in": {
                            "type": "string"
                        }
                    }
                }
            },
            "x-go-skip": true,
            "x-file": "when_expr.yaml"
        },
        "On": {
            "title": "On",
            "type": "object",
            "properties": {
                "failure": {
                    "$ref": "#/definitions/Failure"
                }
            },
            "x-file": "on.yaml"
        },
        "Failure": {
            "title": "Failure",
            "type": "object",
            "description": "Failure defines a failure strategy.",
            "properties": {
                "type": {
                    "description": "Type defines the failure strategy type.",
                    "type": "string",
                    "enum": [
                        "abort",
                        "manual-intervention",
                        "retry"
                    ]
                }
            },
            "oneOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "abort"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/Abort"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "retry"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/Retry"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "manual-intervention"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/ManualIntervention"
                                }
                            }
                        }
                    ]
                }
            ],
            "x-file": "failure.yaml"
        },
        "Abort": {
            "title": "Abort",
            "type": "object",
            "properties": {},
            "x-file": "failure_abort.yaml"
        },
        "Retry": {
            "title": "Retry",
            "properties": {
                "attempts": {
                    "type": "number",
                    "example": 3
                },
                "interval": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string",
                                "format": "duration"
                            },
                            "type": "array",
                            "example": [
                                "5s",
                                "10s",
                                "20s"
                            ]
                        },
                        {
                            "type": "string",
                            "example": "1m",
                            "format": "duration"
                        }
                    ]
                },
                "on": {
                    "$ref": "#/definitions/On"
                }
            },
            "type": "object",
            "x-file": "failure_retry.yaml"
        },
        "ManualIntervention": {
            "title": "ManualIntervention",
            "properties": {
                "on": {
                    "$ref": "#/definitions/On"
                },
                "timeout": {
                    "format": "duration",
                    "type": "string",
                    "example": "30m"
                }
            },
            "type": "object",
            "x-file": "failure_manual.yaml"
        },
        "StageCI": {
            "properties": {
                "clone": {
                    "$ref": "#/definitions/Clone",
                    "description": "Configures the default clone behavior."
                },
                "delegate": {
                    "$ref": "#/definitions/Delegate",
                    "description": "Configures the delegate matching logic."
                },
                "platform": {
                    "$ref": "#/definitions/Platform",
                    "description": "Configures the target execution platform."
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime",
                    "description": "Configures the target runtime engine."
                },
                "steps": {
                    "description": "Configures a series of steps to executes.",
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                }
            },
            "type": "object",
            "title": "StageCI",
            "x-file": "stage_ci.yaml"
        },
        "Clone": {
            "title": "Clone",
            "type": "object",
            "description": "Clone defines the default clone behavior.",
            "properties": {
                "disabled": {
                    "description": "Disabled disables the default clone step.",
                    "type": "boolean"
                }
            },
            "x-file": "clone.yaml"
        },
        "Delegate": {
            "title": "Delegate",
            "type": "object",
            "description": "Delegate defines the delegate matching logic.",
            "properties": {
                "selectors": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Selectors defines tags that are used to match the stage\nwith a delegate.\n"
                }
            },
            "x-file": "delegate.yaml"
        },
        "Platform": {
            "title": "Platform",
            "description": "Platform defines the target execution environment.",
            "type": "object",
            "properties": {
                "arch": {
                    "$ref": "#/definitions/Arch",
                    "description": "Arch defines the target cpu architecture."
                },
                "features": {
                    "description": "Features defines the target platform features.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "os": {
                    "$ref": "#/definitions/OS",
                    "description": "OS defines the target operating system."
                },
                "variant": {
                    "description": "Variant defines the target cpu architecture variant.",
                    "type": "string"
                },
                "version": {
                    "description": "Version defines the target operating system version.",
                    "type": "string"
                }
            },
            "x-file": "platform.yaml"
        },
        "Arch": {
            "title": "Arch",
            "type": "string",
            "description": "List of cpu architectures.",
            "enum": [
                "amd64",
                "arm",
                "arm64",
                "386",
                "ppc",
                "ppc64",
                "ppc64le",
                "riscv",
                "riscv64",
                "s390",
                "s390x",
                "sparc",
                "sparc64"
            ],
            "x-file": "enum_arch.yaml"
        },
        "OS": {
            "title": "OS",
            "type": "string",
            "description": "List of operating systems.",
            "enum": [
                "linux",
                "windows",
                "macos",
                "darwin",
                "dragonfly",
                "freebsd",
                "netbsd",
                "openbsd",
                "plan9",
                "solaris"
            ],
            "x-file": "enum_os.yaml"
        },
        "Runtime": {
            "title": "Runtime",
            "description": "Defines the runtime execution engine.",
            "properties": {
                "type": {
                    "description": "The runtime type.",
                    "enum": [
                        "cloud",
                        "machine",
                        "kubernetes",
                        "vm"
                    ],
                    "type": "string"
                }
            },
            "type": "object",
            "oneOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "cloud"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/RuntimeCloud"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "machine"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/RuntimeMachine"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "kubernetes"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/RuntimeKube"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "vm"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/RuntimeVM"
                                }
                            }
                        }
                    ]
                }
            ],
            "x-file": "runtime.yaml"
        },
        "RuntimeCloud": {
            "title": "RuntimeCloud",
            "type": "object",
            "properties": {
                "size": {
                    "type": "string"
                }
            },
            "x-file": "runtime_cloud.yaml"
        },
        "RuntimeMachine": {
            "title": "RuntimeMachine",
            "type": "object",
            "properties": {},
            "x-file": "runtime_machine.yaml"
        },
        "RuntimeKube": {
            "title": "RuntimeKube",
            "type": "object",
            "properties": {
                "connector": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "mount_service_token": {
                    "type": "boolean"
                },
                "service_account": {
                    "type": "string"
                },
                "security_context": {
                    "type": "string"
                },
                "priority_class": {
                    "type": "string"
                },
                "init_timeout": {
                    "format": "duration",
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "image_pull_secrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "node": {
                    "type": "string"
                },
                "node_selector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tolerations": {
                    "type": "object"
                }
            },
            "x-file": "runtime_kubernetes.yaml"
        },
        "Resources": {
            "title": "Resources",
            "description": "Defines the container resource request and limits.",
            "properties": {
                "limits": {
                    "$ref": "#/definitions/Resource"
                },
                "requests": {
                    "$ref": "#/definitions/Resource"
                }
            },
            "type": "object",
            "x-file": "resources.yaml"
        },
        "Resource": {
            "title": "Resource",
            "type": "object",
            "description": "Resource defines the system resources.",
            "properties": {
                "cpu": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "memory": {
                    "format": "bytes",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "x-file": "resource.yaml"
        },
        "RuntimeVM": {
            "title": "RuntimeVM",
            "type": "object",
            "properties": {
                "pool": {
                    "type": "string"
                }
            },
            "x-file": "runtime_vm.yaml"
        },
        "Step": {
            "title": "Step",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The unique step identifier.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "name": {
                    "type": "string",
                    "description": "The step name."
                },
                "desc": {
                    "type": "string",
                    "description": "The step description."
                },
                "type": {
                    "type": "string",
                    "description": "The step type.",
                    "enum": [
                        "action",
                        "background",
                        "bitrise",
                        "script",
                        "group",
                        "parallel",
                        "plugin",
                        "jenkins",
                        "template"
                    ]
                },
                "timeout": {
                    "type": "string",
                    "description": "The step timeout."
                },
                "strategy": {
                    "$ref": "#/definitions/Strategy",
                    "description": "The stage execution strategy."
                },
                "when": {
                    "description": "The stage conditional logic.",
                    "$ref": "#/definitions/When"
                },
                "on": {
                    "$ref": "#/definitions/On"
                }
            },
            "oneOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "action"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepAction"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "background"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepBackground"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "bitrise"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepBitrise"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "script"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepExec"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "test"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepTest"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "group"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepGroup"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "parallel"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepParallel"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "plugin"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepPlugin"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "template"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepTemplate"
                                }
                            }
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "properties": {
                                "type": {
                                    "const": "jenkins"
                                }
                            }
                        },
                        {
                            "properties": {
                                "spec": {
                                    "$ref": "#/definitions/StepJenkins"
                                }
                            }
                        }
                    ]
                }
            ],
            "x-file": "step.yaml"
        },
        "StepAction": {
            "title": "StepAction",
            "type": "object",
            "properties": {
                "uses": {
                    "type": "string"
                },
                "with": {
                    "type": "object"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-file": "step_action.yaml"
        },
        "StepBackground": {
            "title": "StepBackground",
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "pull": {
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "if-not-exists"
                    ]
                },
                "shell": {
                    "type": "string",
                    "enum": [
                        "sh",
                        "bash",
                        "powershell",
                        "pwsh"
                    ]
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The step environment variables."
                },
                "run": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "privileged": {
                    "type": "boolean"
                },
                "outputs": {
                    "type": "string"
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Mount"
                    }
                }
            },
            "x-file": "step_background.yaml"
        },
        "Mount": {
            "title": "Mount",
            "type": "object",
            "description": "Mount defines a volume mount.",
            "properties": {
                "name": {
                    "description": "Name defines the volume name.",
                    "type": "string"
                },
                "path": {
                    "description": "Path specifies the target mount path.",
                    "type": "string"
                }
            },
            "x-file": "mount.yaml"
        },
        "StepBitrise": {
            "title": "StepBitrise",
            "type": "object",
            "properties": {
                "uses": {
                    "type": "string"
                },
                "with": {
                    "type": "object"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-file": "step_bitrise.yaml"
        },
        "StepExec": {
            "title": "StepExec",
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "pull": {
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "if-not-exists"
                    ]
                },
                "shell": {
                    "type": "string",
                    "enum": [
                        "sh",
                        "bash",
                        "powershell",
                        "pwsh",
                        "python"
                    ]
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The step environment variables."
                },
                "run": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privileged": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Mount"
                    }
                }
            },
            "x-file": "step_exec.yaml"
        },
        "Report": {
            "title": "Report",
            "type": "object",
            "description": "Report defines a report artifact.",
            "properties": {
                "path": {
                    "description": "Path provides the report file path.",
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Type provides the report type.",
                    "enum": [
                        "junit",
                        "xunit",
                        "nunit"
                    ]
                }
            },
            "required": [
                "path",
                "type"
            ],
            "x-file": "report.yaml"
        },
        "StepTest": {
            "title": "StepTest",
            "type": "object",
            "properties": {
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                },
                "uses": {
                    "type": "string"
                },
                "with": {
                    "type": "object"
                },
                "splitting": {
                    "$ref": "#/definitions/Splitting"
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "pull": {
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "if-not-exists"
                    ]
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                }
            },
            "examples": [
                {
                    "type": "test",
                    "spec": {
                        "uses": "maven",
                        "with": {
                            "packages": [
                                "foo",
                                "bar"
                            ]
                        },
                        "splitting": {
                            "enabled": true,
                            "concurrency": 3
                        }
                    }
                }
            ],
            "x-file": "step_ti.yaml"
        },
        "Splitting": {
            "title": "Splitting",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "concurrency": {
                    "type": "number"
                },
                "strategy": {
                    "type": "string"
                }
            },
            "x-file": "splitting.yaml"
        },
        "StepGroup": {
            "type": "object",
            "title": "StepGroup",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Step"
                    }
                }
            },
            "x-file": "step_group.yaml"
        },
        "StepParallel": {
            "type": "object",
            "title": "StepParallel",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Step"
                    }
                }
            },
            "x-file": "step_parallel.yaml"
        },
        "StepPlugin": {
            "title": "StepPlugin",
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "uses": {
                    "type": "string"
                },
                "connector": {
                    "type": "string"
                },
                "pull": {
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "if-not-exists"
                    ]
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The step environment variables."
                },
                "reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "privileged": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "with": {
                    "type": "object"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Mount"
                    }
                }
            },
            "x-file": "step_plugin.yaml"
        },
        "StepTemplate": {
            "type": "object",
            "title": "StepTemplate",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Template name."
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "overlays": {
                    "type": "object"
                }
            },
            "x-file": "step_template.yaml"
        },
        "StepJenkins": {
            "title": "StepJenkins",
            "type": "object",
            "properties": {
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                },
                "path": {
                    "type": "string"
                },
                "mirror": {
                    "type": "string"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-file": "step_jenkins.yaml"
        },
        "StageCD": {
            "properties": {
                "delegate": {
                    "$ref": "#/definitions/Delegate",
                    "description": "Configures the delegate matching logic."
                },
                "platform": {
                    "$ref": "#/definitions/Platform",
                    "description": "Configures the target execution platform."
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime",
                    "description": "Configures the target runtime engine."
                },
                "steps": {
                    "description": "Configures a series of steps to executes.",
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                }
            },
            "type": "object",
            "title": "StageCD",
            "x-file": "stage_cd.yaml"
        },
        "StageCustom": {
            "properties": {
                "delegate": {
                    "$ref": "#/definitions/Delegate",
                    "description": "Configures the delegate matching logic."
                },
                "platform": {
                    "$ref": "#/definitions/Platform",
                    "description": "Configures the target execution platform."
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime",
                    "description": "Configures the target runtime engine."
                },
                "steps": {
                    "description": "Configures a series of steps to executes.",
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                }
            },
            "type": "object",
            "title": "StageCustom",
            "x-file": "stage_custom.yaml"
        },
        "StageInfra": {
            "properties": {
                "clone": {
                    "$ref": "#/definitions/Clone",
                    "description": "Configures the default clone behavior."
                },
                "delegate": {
                    "$ref": "#/definitions/Delegate",
                    "description": "Configures the delegate matching logic."
                },
                "platform": {
                    "$ref": "#/definitions/Platform",
                    "description": "Configures the target execution platform."
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime",
                    "description": "Configures the target runtime engine."
                },
                "steps": {
                    "description": "Configures a series of steps to executes.",
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                }
            },
            "type": "object",
            "title": "StageInfra",
            "x-file": "stage_infra.yaml"
        },
        "StageFlag": {
            "properties": {
                "delegate": {
                    "$ref": "#/definitions/Delegate",
                    "description": "Configures the delegate matching logic."
                },
                "platform": {
                    "$ref": "#/definitions/Platform",
                    "description": "Configures the target execution platform."
                },
                "runtime": {
                    "$ref": "#/definitions/Runtime",
                    "description": "Configures the target runtime engine."
                },
                "steps": {
                    "description": "Configures a series of steps to executes.",
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "envs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The stage environment variables."
                }
            },
            "type": "object",
            "title": "StageFlag",
            "x-file": "stage_flag.yaml"
        },
        "StageTemplate": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Template name."
                },
                "inputs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "overlays": {
                    "type": "object"
                }
            },
            "type": "object",
            "title": "StageTemplate",
            "x-file": "stage_template.yaml"
        },
        "Input": {
            "title": "Input",
            "type": "object",
            "description": "Input defines an input parameter.",
            "properties": {
                "type": {
                    "description": "Type defines the input type.",
                    "type": "string",
                    "enum": [
                        "string",
                        "number",
                        "boolean"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Desc defines the input description."
                },
                "default": {
                    "type": [
                        "string",
                        "number",
                        "boolean"
                    ]
                },
                "required": {
                    "type": "boolean",
                    "description": "Required indicates the input is required."
                },
                "enum": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "number",
                            "boolean"
                        ]
                    },
                    "description": "Enum defines a list of accepted input values.",
                    "x-go-type": "[]string"
                }
            },
            "x-file": "input.yaml"
        },
        "Repository": {
            "title": "Repository",
            "description": "Repository defines a remote git repository.",
            "type": "object",
            "properties": {
                "connector": {
                    "description": "Connector provides the repository connector.",
                    "type": "string"
                },
                "name": {
                    "description": "Name provides the repository name.",
                    "type": "string"
                },
                "depth": {
                    "description": "Depth defines the clone depth.",
                    "type": "number"
                },
                "disabled": {
                    "description": "Disabled disables the default clone step.",
                    "type": "boolean"
                },
                "insecure": {
                    "description": "Insecure disables ssl verification.",
                    "type": "boolean"
                },
                "trace": {
                    "description": "Trace enables trace logging.",
                    "type": "boolean"
                },
                "sha": {
                    "description": "Sha provides the repository commit sha.",
                    "type": "string"
                },
                "reference": {
                    "type": "object",
                    "description": "Reference defines the repository reference parameters.",
                    "additionalProperties": {
                        "$ref": "#/definitions/Reference"
                    }
                }
            },
            "x-file": "repository.yaml"
        },
        "Reference": {
            "title": "Reference",
            "description": "Reference defines a git clone reference.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "Value provides ref name.",
                    "type": "string"
                },
                "type": {
                    "description": "Type defines the ref type.",
                    "type": "string",
                    "enum": [
                        "branch",
                        "tag",
                        "pr"
                    ]
                }
            },
            "x-file": "reference.yaml"
        },
        "Registry": {
            "title": "Registry",
            "description": "Registry provides container registry details.",
            "type": "object",
            "properties": {
                "credentials": {
                    "description": "Credentials provides container registry pull credentials.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "examples": [
                {
                    "version": 1,
                    "stages": [
                        {
                            "name": "build",
                            "type": "ci",
                            "spec": {
                                "steps": [
                                    {
                                        "name": "compile",
                                        "type": "script",
                                        "image": "golang",
                                        "spec": {
                                            "run": "go build"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "registry": {
                        "credentials": [
                            "connector.dockerhub",
                            "connector.gcr"
                        ]
                    }
                },
                {
                    "version": 1,
                    "stages": [
                        {
                            "name": "build",
                            "type": "ci",
                            "spec": {
                                "steps": [
                                    {
                                        "name": "compile",
                                        "type": "script",
                                        "image": "us.gcr.io/account/project/golang:latest",
                                        "spec": {
                                            "run": "go build"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "registry": {
                        "credentials": [
                            {
                                "name": "connector.dockerhub",
                                "match": "docker.io"
                            },
                            {
                                "name": "connector.gcr",
                                "match": "us.gcr.io"
                            }
                        ]
                    }
                }
            ],
            "x-file": "registry.yaml"
        }
    },
    "oneOf": [
        {
            "$ref": "#/definitions/Pipeline"
        }
    ]
}